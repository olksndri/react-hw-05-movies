{"version":3,"file":"static/js/550.8ccad06b.chunk.js","mappings":"gMACA,EAAkC,sCAAlC,EAAgF,4BAAhF,EAAwH,0DAAxH,EAA6L,yDAA7L,EAAqQ,6DAArQ,EAAiV,6DAAjV,EAA0Z,gCAA1Z,EAAyc,mCAAzc,EAAwf,gC,oDC6Dxf,EAxDqB,WAAO,IAADA,EAAAC,EACfC,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA4BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAIjBG,EAA+B,QAAvBd,EAAiB,QAAjBC,GADGc,EAAAA,EAAAA,MACSC,aAAK,IAAAf,OAAA,EAAdA,EAAgBgB,YAAI,IAAAjB,EAAAA,EAAI,IAyCzC,OAvCAkB,EAAAA,EAAAA,YAAU,YACFC,EAAAA,EAAAA,GAAU,SAADC,OAAUlB,IAClBmB,MAAK,SAAAC,GAAa,IAAXC,EAAID,EAAJC,KACJd,GACIe,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAuBC,SAAA,EACnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,GAAIhB,EAASa,SAAC,aAC1BC,EAAAA,EAAAA,KAAA,OAAKG,IAAG,uCAAAX,OAAyCG,EAAKS,eAAiBC,IAAI,MAC3ET,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAUC,SAAA,EACrBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAiBC,SAAC,iBAAmB,IAAEJ,EAAKW,UAEjEV,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAiBC,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAiBC,SAAC,aAClCJ,EAAKY,OAAOC,KAAI,SAACC,EAAIC,GACtB,OAASA,IAAMf,EAAKY,OAAOI,OAAS,EAAC,GAAAnB,OAAOiB,EAAGG,KAAI,SAAApB,OAAUiB,EAAGG,KAAI,IACpE,QAEJhB,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAaC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAiBC,SAAC,cAAgB,IAAGJ,EAAKkB,aAE/DjB,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAoBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAiBC,SAAC,kBAAoB,IAAGJ,EAAmB,iBAEjFC,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAoBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAiBC,SAAC,kBAAoB,IAAGJ,EAAmB,iBAEjFK,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACZ,GAAG,UAAUL,UAAWC,EAAqBV,MAAO,CAACC,KAAMH,GAAUa,SAAC,aAC5EC,EAAAA,EAAAA,KAACc,EAAAA,GAAI,CAACZ,GAAG,OAAOL,UAAWC,EAAkBV,MAAO,CAACC,KAAMH,GAAUa,SAAC,UACtEC,EAAAA,EAAAA,KAACe,EAAAA,SAAQ,CAACC,UAAUhB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAAiBA,UACtCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAM,SAIvB,IACKC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZlC,EAASqC,OAAOH,EAAII,SAASC,QACjC,GACZ,GAAG,CAACtC,EAAUZ,KAGV0B,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAA1B,SACe,OAAVf,EAAiBJ,GAAeoB,EAAAA,EAAAA,KAAA,OAAAD,SAAgB,MAAVf,GAAiB,uDAIpE,C","sources":["webpack://react-homework-template/./src/styles/MovieDetails.module.css?c82e","components/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"details-wrapper\":\"MovieDetails_details-wrapper__ahXM2\",\"title\":\"MovieDetails_title__b0Zz2\",\"pre-title\":\"MovieDetails_pre-title__qgeVI MovieDetails_title__b0Zz2\",\"overview\":\"MovieDetails_overview__xehPj MovieDetails_title__b0Zz2\",\"release_date\":\"MovieDetails_release_date__ZiNWs MovieDetails_title__b0Zz2\",\"vote_average\":\"MovieDetails_vote_average__NOM6Q MovieDetails_title__b0Zz2\",\"sub-title\":\"MovieDetails_sub-title__0-Fsg\",\"reviews-link\":\"MovieDetails_reviews-link__WN0pm\",\"cast-link\":\"MovieDetails_cast-link__rKPmi\"};","import css from \"../styles/MovieDetails.module.css\";\nimport { useEffect, useState, Suspense } from \"react\";\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { getFromDB } from \"js/getFromDB\";\nimport { StyledLink } from \"./App\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState(null);\n    const [ error, setError ] = useState(null); \n\n\n    const location = useLocation();\n    const backLink = location.state?.from ?? \"/\";\n\n    useEffect(() => { \n            getFromDB(`movie/${movieId}`)\n            .then(({data}) => {\n                setMovieDetails(\n                    <div className={css['details-wrapper']}>\n                        <StyledLink to={backLink}>Go back</StyledLink>\n                        <img src={`https://image.tmdb.org/t/p/original/${data.backdrop_path}`} alt=''></img>\n                        <h2 className={css.title}>\n                            <span className={css['sub-title']}>Movie title:</span> {data.title}\n                        </h2>\n                        <p className={css['pre-title']}>\n                            <span className={css['sub-title']}>Genres: </span>\n                            {data.genres.map((el, i) => {\n                            return ((i !== data.genres.length - 1) ? `${el.name}, ` : `${el.name}.`); \n                            })}\n                        </p>\n                        <p className={css.overview}>\n                            <span className={css['sub-title']}>Overview:</span> { data.overview }\n                        </p>\n                        <p className={css['release_date']}>\n                            <span className={css['sub-title']}>Release date:</span> { data['release_date'] }\n                        </p>\n                        <p className={css['vote_average']}>\n                            <span className={css['sub-title']}>Vote average:</span> { data['vote_average'] }\n                        </p>\n                        <Link to='reviews' className={css['reviews-link']} state={{from: backLink}}>Reviews</Link>\n                        <Link to='cast' className={css['cast-link']} state={{from: backLink}}>Cast</Link>\n                        <Suspense fallback={<div>Loading...</div>}>\n                            <Outlet/>\n                        </Suspense>\n                    </div>\n                )\n            })\n                .catch(err => {\n                    console.log(err);\n                    setError(Number(err.response.status));\n                });\n    }, [backLink, movieId])\n\n    return (\n        <>\n            {error === null ? movieDetails : <div>{error === 404 && 'we cannot find information about the movie, sorry'}</div>}\n        </>\n    )\n    \n}\n\nexport default MovieDetails; "],"names":["_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","error","setError","backLink","useLocation","state","from","useEffect","getFromDB","concat","then","_ref","data","_jsxs","className","css","children","_jsx","StyledLink","to","src","backdrop_path","alt","title","genres","map","el","i","length","name","overview","Link","Suspense","fallback","Outlet","catch","err","console","log","Number","response","status","_Fragment"],"sourceRoot":""}